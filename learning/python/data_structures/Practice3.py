"""
1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

"""
# while True:
#     try:
#         arg1 = int(input('Введите первое число:'))
#         arg2 = int(input('Введите второе число:'))
#         test = arg1 / arg2
#         break
#     except ZeroDivisionError:
#         print('Деление на ноль! Перезадайте второе значение!')
#         continue
#
# def division_func(arg1, arg2):
#     return arg1 / arg2
#
#
# print(division_func(arg1, arg2))

"""
2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, 
фамилия, год рождения, город проживания, email, телефон. 
Функция должна принимать параметры как именованные аргументы. 
Реализовать вывод данных о пользователе одной строкой.
"""

# def user_data(name, surname, date, city, user_email, number):
#     print(f'Имя пользователя: {name}\n'
#           f'Фамилия пользователя: {surname}\n'
#           f'Дата рождения : {date}\n'
#           f'Город проживания: {city}\n'
#           f'Емайл адрес пользователя: {user_email}\n'
#           f'Номер телефона пользователя: {number}\n')
#
#
# user_data(name=input('Введите имя пользователя:'),
#           surname=input('Введите фамилию пользователя:'),
#           date=int(input('Введите дату рождения пользователя:')),
#           city=input('Введите город проживания пользователя:'),
#           user_email=input('Введите емайл пользователя:'),
#           number=int(input('Введите номер телефона пользователя:'))
#           )

"""
3. Реализовать функцию my_func(), которая принимает три позиционных аргумента 
и возвращает сумму наибольших двух аргументов.
"""

# def my_func(arg1, arg2, arg3):
#     if arg1 < arg2 and arg1 < arg3:
#         result = arg2 + arg3
#         return int(result)
#     if arg2 < arg1 and arg2 < arg3:
#         result = arg1 + arg3
#         return int(result)
#     if arg3 < arg1 and arg3 < arg2:
#         result = arg1 + arg2
#         return int(result)
#
#
# print(my_func(int(input('Введите число №1: ')), int(input('Введите число №2: ')), int(input('Введите число №3: '))))

"""
4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). 
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. 
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""

# Вариант №1
#
# def my_func(x, y):
#     return x ** y
#
#
# print(my_func(x=float(input('Введите действительное положительное число: ')),
#               y=int(input('Ведите целое отрицательное число: '))))
#
#
# # Вариант №2
#
# def my_func(x, y):
#     i = 1
#     while i != abs(y):
#         x = 1 / (x * x)
#         i += 1
#     return x
#
#
# print(my_func(5.45, -2))

"""
5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и 
снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа 
вводится специальный символ, выполнение программы завершается. 
Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к 
полученной ранее сумме и после этого завершить программу.
"""
# the_summ = 0
# brake_param = True
# while brake_param is True:
#     user_input_string = input('Введите случайный номер, числа в котором разделены пробелом:')
#     user_input_string_splitted = user_input_string.split()
#     # print(user_input_string_splitted)
#     for number in user_input_string_splitted:
#         # print(number)
#         # print(type(number))
#         if number == '@':
#             print('Конец программы!')
#             brake_param = False
#             break
#         else:
#             number = int(number)
#             the_summ = the_summ + number
#     print(the_summ)

"""
6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, 
но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
"""


# ВКЛЮЧИТЬ ДЛЯ РАБОТЫ НАД ВВОДОМ СТРОКИ ИЗ ЛАТИНСКИХ БУКВ!!!!!#
# def int_func(slovo):
#     str(slovo)
#     return slovo.capitalize()
# ВКЛЮЧИТЬ ДЛЯ РАБОТЫ НАД ВВОДОМ СТРОКИ ИЗ ЛАТИНСКИХ БУКВ!!!!!#
# print(int_func(input('Введите слово из маленьких латинских букв:')))

# user_string = input('Введите строку из слов с маленькими латинскими буквами: ')
#
# splitted_user_string = user_string.split()
#
# created_list = []
#
# for word in splitted_user_string:
#     created_list.append(int_func(word))
#
# print('Искомая строка: ', ' '.join(created_list))
